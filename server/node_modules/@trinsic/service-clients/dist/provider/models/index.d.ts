import { ServiceClientOptions } from "@azure/ms-rest-js";
import * as msRest from "@azure/ms-rest-js";
/**
 * Cloud Wallet Analytics Contract
 */
export interface CloudWalletAnalyticsContract {
    /**
     * Total number of cloud wallets for this account.
     */
    total?: number;
}
/**
 * Usage Contract
 */
export interface UsageContract {
    /**
     * Period start date
     */
    periodStart?: Date;
    /**
     * Period end date
     */
    periodEnd?: Date;
    /**
     * Total credentials issued for the given period
     */
    credentialCount?: number;
    /**
     * Total verifications processed for the given period
     */
    verificationCount?: number;
    /**
     * The invoice identifier
     */
    invoiceId?: string;
}
/**
 * Asset contract
 */
export interface AssetContract {
    /**
     * Public URI
     */
    publicUri?: string;
}
/**
 * An interface representing NetworkContract.
 */
export interface NetworkContract {
    networkId?: string;
    networkName?: string;
    genesisTransactions?: string;
    poolProtocolVersion?: number;
}
/**
 * Extended tenant information
 */
export interface TenantExtendedInformationContract {
    /**
     * Issuer DID
     */
    issuerDid?: string;
    /**
     * Issuer Public Key
     */
    issuerKey?: string;
    /**
     * Issuer key generation seed used for deterministic key creation (32 characters)
     */
    issuerKeyGenerationSeed?: string;
    /**
     * Agent DID
     */
    agentDid?: string;
    /**
     * Agent Public Key
     */
    agentKey?: string;
    /**
     * Agent key generation seed used for deterministic key creation (32 characters)
     */
    agentKeyGenerationSeed?: string;
    /**
     * Agent service endpoint URL
     */
    agentServiceEndpoint?: string;
    /**
     * Possible values include: 'Shared', 'Dedicated', 'Delegated'
     */
    transactionEndorsement?: TransactionEndorsement;
}
/**
 * Tenant info
 */
export interface TenantContract {
    /**
     * The tenant name
     * **NOTE: This property will not be serialized. It can only be populated by the server.**
     */
    readonly name?: string;
    /**
     * The image URL
     */
    imageUrl?: string;
    network?: NetworkContract;
    /**
     * The tenant identifier
     * **NOTE: This property will not be serialized. It can only be populated by the server.**
     */
    readonly tenantId?: string;
    /**
     * The region of the data center where all data for this tenant is located
     */
    region?: string;
    extendedInformation?: TenantExtendedInformationContract;
}
/**
 * Configuration options for creating new tenant
 */
export interface TenantParameters {
    /**
     * The tenant identifier
     */
    tenantId?: string;
    /**
     * Issuer seed used for deterministic DID generation.
     * If omitted, a random DID/Key is generated.
     */
    issuerSeed?: string;
    /**
     * The tenant name
     */
    name: string;
    /**
     * URL of tenant profile image
     */
    imageUrl?: string;
    /**
     * Ledger network identifier.
     * Default value is Sovrin Staging (sovrin-staging).
     */
    networkId?: string;
    /**
     * Possible values include: 'Shared', 'Dedicated', 'Delegated'
     */
    endorserType?: EndorserType;
    /**
     * The geo-region where storage data will be located.
     */
    region?: string;
}
/**
 * Tenant update parameters
 */
export interface TenantUpdateParameters {
    /**
     * The tenant name
     */
    name: string;
    /**
     * URL of tenant image
     */
    imageUrl?: string;
}
/**
 * Tenant keys
 */
export interface TenantKeysContract {
    /**
     * JWT Access Token that authorizes API calls for the organization
     */
    accessToken?: string;
    /**
     * Identifies and authenticates your subscription
     */
    subscriptionKey?: string;
}
/**
 * An interface representing ProviderServiceClientOptions.
 */
export interface ProviderServiceClientOptions extends ServiceClientOptions {
    baseUri?: string;
}
/**
 * Optional Parameters.
 */
export interface ProviderServiceClientAddAssetOptionalParams extends msRest.RequestOptionsBase {
    /**
     * Filename to be uploaded
     */
    filename?: string;
    /**
     * Content type of files to be uploaded
     */
    contentType?: string;
}
/**
 * Defines values for TransactionEndorsement.
 * Possible values include: 'Shared', 'Dedicated', 'Delegated'
 * @readonly
 * @enum {string}
 */
export declare type TransactionEndorsement = 'Shared' | 'Dedicated' | 'Delegated';
/**
 * Defines values for EndorserType.
 * Possible values include: 'Shared', 'Dedicated', 'Delegated'
 * @readonly
 * @enum {string}
 */
export declare type EndorserType = 'Shared' | 'Dedicated' | 'Delegated';
/**
 * Contains response data for the getCloudWalletCount operation.
 */
export declare type GetCloudWalletCountResponse = CloudWalletAnalyticsContract & {
    /**
     * The underlying HTTP response.
     */
    _response: msRest.HttpResponse & {
        /**
         * The response body as text (string format)
         */
        bodyAsText: string;
        /**
         * The response body as parsed JSON or XML
         */
        parsedBody: CloudWalletAnalyticsContract;
    };
};
/**
 * Contains response data for the getCurrentUsage operation.
 */
export declare type GetCurrentUsageResponse = UsageContract & {
    /**
     * The underlying HTTP response.
     */
    _response: msRest.HttpResponse & {
        /**
         * The response body as text (string format)
         */
        bodyAsText: string;
        /**
         * The response body as parsed JSON or XML
         */
        parsedBody: UsageContract;
    };
};
/**
 * Contains response data for the searchUsage operation.
 */
export declare type SearchUsageResponse = Array<UsageContract> & {
    /**
     * The underlying HTTP response.
     */
    _response: msRest.HttpResponse & {
        /**
         * The response body as text (string format)
         */
        bodyAsText: string;
        /**
         * The response body as parsed JSON or XML
         */
        parsedBody: UsageContract[];
    };
};
/**
 * Contains response data for the addAsset operation.
 */
export declare type AddAssetResponse = AssetContract & {
    /**
     * The underlying HTTP response.
     */
    _response: msRest.HttpResponse & {
        /**
         * The response body as text (string format)
         */
        bodyAsText: string;
        /**
         * The response body as parsed JSON or XML
         */
        parsedBody: AssetContract;
    };
};
/**
 * Contains response data for the listNetworks operation.
 */
export declare type ListNetworksResponse = Array<NetworkContract> & {
    /**
     * The underlying HTTP response.
     */
    _response: msRest.HttpResponse & {
        /**
         * The response body as text (string format)
         */
        bodyAsText: string;
        /**
         * The response body as parsed JSON or XML
         */
        parsedBody: NetworkContract[];
    };
};
/**
 * Contains response data for the getRegions operation.
 */
export declare type GetRegionsResponse = {
    /**
     * The response body properties.
     */
    [propertyName: string]: string;
} & {
    /**
     * The underlying HTTP response.
     */
    _response: msRest.HttpResponse & {
        /**
         * The response body as text (string format)
         */
        bodyAsText: string;
        /**
         * The response body as parsed JSON or XML
         */
        parsedBody: {
            [propertyName: string]: string;
        };
    };
};
/**
 * Contains response data for the listTenants operation.
 */
export declare type ListTenantsResponse = Array<TenantContract> & {
    /**
     * The underlying HTTP response.
     */
    _response: msRest.HttpResponse & {
        /**
         * The response body as text (string format)
         */
        bodyAsText: string;
        /**
         * The response body as parsed JSON or XML
         */
        parsedBody: TenantContract[];
    };
};
/**
 * Contains response data for the createTenant operation.
 */
export declare type CreateTenantResponse = TenantContract & {
    /**
     * The underlying HTTP response.
     */
    _response: msRest.HttpResponse & {
        /**
         * The response body as text (string format)
         */
        bodyAsText: string;
        /**
         * The response body as parsed JSON or XML
         */
        parsedBody: TenantContract;
    };
};
/**
 * Contains response data for the getTenant operation.
 */
export declare type GetTenantResponse = TenantContract & {
    /**
     * The underlying HTTP response.
     */
    _response: msRest.HttpResponse & {
        /**
         * The response body as text (string format)
         */
        bodyAsText: string;
        /**
         * The response body as parsed JSON or XML
         */
        parsedBody: TenantContract;
    };
};
/**
 * Contains response data for the getTenantKeys operation.
 */
export declare type GetTenantKeysResponse = TenantKeysContract & {
    /**
     * The underlying HTTP response.
     */
    _response: msRest.HttpResponse & {
        /**
         * The response body as text (string format)
         */
        bodyAsText: string;
        /**
         * The response body as parsed JSON or XML
         */
        parsedBody: TenantKeysContract;
    };
};
/**
 * Contains response data for the changeTenantKeys operation.
 */
export declare type ChangeTenantKeysResponse = TenantKeysContract & {
    /**
     * The underlying HTTP response.
     */
    _response: msRest.HttpResponse & {
        /**
         * The response body as text (string format)
         */
        bodyAsText: string;
        /**
         * The response body as parsed JSON or XML
         */
        parsedBody: TenantKeysContract;
    };
};
