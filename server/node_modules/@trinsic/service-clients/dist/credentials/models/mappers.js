"use strict";
/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NetworkContract = {
    serializedName: "NetworkContract",
    type: {
        name: "Composite",
        className: "NetworkContract",
        modelProperties: {
            networkId: {
                serializedName: "networkId",
                type: {
                    name: "String"
                }
            },
            networkName: {
                serializedName: "networkName",
                type: {
                    name: "String"
                }
            },
            genesisTransactions: {
                serializedName: "genesisTransactions",
                type: {
                    name: "String"
                }
            },
            poolProtocolVersion: {
                serializedName: "poolProtocolVersion",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.NetworkTxnAgreementContract = {
    serializedName: "NetworkTxnAgreementContract",
    type: {
        name: "Composite",
        className: "NetworkTxnAgreementContract",
        modelProperties: {
            text: {
                serializedName: "text",
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "version",
                type: {
                    name: "String"
                }
            },
            acceptanceMethods: {
                serializedName: "acceptanceMethods",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
exports.AgentEndpoint = {
    serializedName: "AgentEndpoint",
    type: {
        name: "Composite",
        className: "AgentEndpoint",
        modelProperties: {
            did: {
                serializedName: "did",
                type: {
                    name: "String"
                }
            },
            verkey: {
                serializedName: "verkey",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            uri: {
                serializedName: "uri",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ConnectionContract = {
    serializedName: "ConnectionContract",
    type: {
        name: "Composite",
        className: "ConnectionContract",
        modelProperties: {
            connectionId: {
                serializedName: "connectionId",
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            imageUrl: {
                serializedName: "imageUrl",
                type: {
                    name: "String"
                }
            },
            myDid: {
                serializedName: "myDid",
                type: {
                    name: "String"
                }
            },
            theirDid: {
                serializedName: "theirDid",
                type: {
                    name: "String"
                }
            },
            myKey: {
                serializedName: "myKey",
                type: {
                    name: "String"
                }
            },
            theirKey: {
                serializedName: "theirKey",
                type: {
                    name: "String"
                }
            },
            state: {
                serializedName: "state",
                type: {
                    name: "String"
                }
            },
            invitation: {
                serializedName: "invitation",
                type: {
                    name: "String"
                }
            },
            invitationUrl: {
                serializedName: "invitationUrl",
                type: {
                    name: "String"
                }
            },
            endpoint: {
                serializedName: "endpoint",
                type: {
                    name: "Composite",
                    className: "AgentEndpoint"
                }
            },
            createdAtUtc: {
                serializedName: "createdAtUtc",
                type: {
                    name: "DateTime"
                }
            },
            multiParty: {
                serializedName: "multiParty",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.ConnectionInvitationParameters = {
    serializedName: "ConnectionInvitationParameters",
    type: {
        name: "Composite",
        className: "ConnectionInvitationParameters",
        modelProperties: {
            connectionId: {
                serializedName: "connectionId",
                type: {
                    name: "String"
                }
            },
            multiParty: {
                serializedName: "multiParty",
                type: {
                    name: "Boolean"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.CredentialContract = {
    serializedName: "CredentialContract",
    type: {
        name: "Composite",
        className: "CredentialContract",
        modelProperties: {
            credentialId: {
                serializedName: "credentialId",
                type: {
                    name: "String"
                }
            },
            state: {
                serializedName: "state",
                type: {
                    name: "String"
                }
            },
            connectionId: {
                serializedName: "connectionId",
                type: {
                    name: "String"
                }
            },
            definitionId: {
                serializedName: "definitionId",
                type: {
                    name: "String"
                }
            },
            schemaId: {
                serializedName: "schemaId",
                type: {
                    name: "String"
                }
            },
            offerData: {
                serializedName: "offerData",
                type: {
                    name: "String"
                }
            },
            offerUrl: {
                serializedName: "offerUrl",
                type: {
                    name: "String"
                }
            },
            issuedAtUtc: {
                serializedName: "issuedAtUtc",
                type: {
                    name: "DateTime"
                }
            },
            acceptedAtUtc: {
                serializedName: "acceptedAtUtc",
                type: {
                    name: "DateTime"
                }
            },
            values: {
                serializedName: "values",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            correlationId: {
                serializedName: "correlationId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.CredentialOfferParameters = {
    serializedName: "CredentialOfferParameters",
    type: {
        name: "Composite",
        className: "CredentialOfferParameters",
        modelProperties: {
            definitionId: {
                required: true,
                serializedName: "definitionId",
                type: {
                    name: "String"
                }
            },
            connectionId: {
                serializedName: "connectionId",
                type: {
                    name: "String"
                }
            },
            automaticIssuance: {
                serializedName: "automaticIssuance",
                type: {
                    name: "Boolean"
                }
            },
            credentialValues: {
                serializedName: "credentialValues",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
exports.VerificationPolicyRestrictionAttribute = {
    serializedName: "VerificationPolicyRestrictionAttribute",
    type: {
        name: "Composite",
        className: "VerificationPolicyRestrictionAttribute",
        modelProperties: {
            attributeName: {
                serializedName: "attributeName",
                type: {
                    name: "String"
                }
            },
            attributeValue: {
                serializedName: "attributeValue",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VerificationPolicyRestriction = {
    serializedName: "VerificationPolicyRestriction",
    type: {
        name: "Composite",
        className: "VerificationPolicyRestriction",
        modelProperties: {
            schemaId: {
                serializedName: "schemaId",
                type: {
                    name: "String"
                }
            },
            schemaIssuerDid: {
                serializedName: "schemaIssuerDid",
                type: {
                    name: "String"
                }
            },
            schemaName: {
                serializedName: "schemaName",
                type: {
                    name: "String"
                }
            },
            schemaVersion: {
                serializedName: "schemaVersion",
                type: {
                    name: "String"
                }
            },
            issuerDid: {
                serializedName: "issuerDid",
                type: {
                    name: "String"
                }
            },
            credentialDefinitionId: {
                serializedName: "credentialDefinitionId",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "Composite",
                    className: "VerificationPolicyRestrictionAttribute"
                }
            }
        }
    }
};
exports.VerificationPolicyAttributeContract = {
    serializedName: "VerificationPolicyAttributeContract",
    type: {
        name: "Composite",
        className: "VerificationPolicyAttributeContract",
        modelProperties: {
            policyName: {
                required: true,
                serializedName: "policyName",
                type: {
                    name: "String"
                }
            },
            attributeNames: {
                required: true,
                serializedName: "attributeNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            restrictions: {
                serializedName: "restrictions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VerificationPolicyRestriction"
                        }
                    }
                }
            }
        }
    }
};
exports.VerificationPolicyPredicateContract = {
    serializedName: "VerificationPolicyPredicateContract",
    type: {
        name: "Composite",
        className: "VerificationPolicyPredicateContract",
        modelProperties: {
            policyName: {
                required: true,
                serializedName: "policyName",
                type: {
                    name: "String"
                }
            },
            attributeName: {
                required: true,
                serializedName: "attributeName",
                type: {
                    name: "String"
                }
            },
            predicateType: {
                required: true,
                serializedName: "predicateType",
                type: {
                    name: "String"
                }
            },
            predicateValue: {
                required: true,
                serializedName: "predicateValue",
                type: {
                    name: "Number"
                }
            },
            restrictions: {
                serializedName: "restrictions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VerificationPolicyRestriction"
                        }
                    }
                }
            }
        }
    }
};
exports.VerificationPolicyRevocationRequirement = {
    serializedName: "VerificationPolicyRevocationRequirement",
    type: {
        name: "Composite",
        className: "VerificationPolicyRevocationRequirement",
        modelProperties: {
            validAt: {
                serializedName: "validAt",
                type: {
                    name: "DateTime"
                }
            },
            validNow: {
                serializedName: "validNow",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.VerificationPolicyContract = {
    serializedName: "VerificationPolicyContract",
    type: {
        name: "Composite",
        className: "VerificationPolicyContract",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            version: {
                required: true,
                serializedName: "version",
                type: {
                    name: "String"
                }
            },
            attributes: {
                serializedName: "attributes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VerificationPolicyAttributeContract"
                        }
                    }
                }
            },
            predicates: {
                serializedName: "predicates",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VerificationPolicyPredicateContract"
                        }
                    }
                }
            },
            revocationRequirement: {
                serializedName: "revocationRequirement",
                type: {
                    name: "Composite",
                    className: "VerificationPolicyRevocationRequirement"
                }
            },
            policyId: {
                serializedName: "policyId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VerificationPolicyParameters = {
    serializedName: "VerificationPolicyParameters",
    type: {
        name: "Composite",
        className: "VerificationPolicyParameters",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            version: {
                required: true,
                serializedName: "version",
                type: {
                    name: "String"
                }
            },
            attributes: {
                serializedName: "attributes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VerificationPolicyAttributeContract"
                        }
                    }
                }
            },
            predicates: {
                serializedName: "predicates",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VerificationPolicyPredicateContract"
                        }
                    }
                }
            },
            revocationRequirement: {
                serializedName: "revocationRequirement",
                type: {
                    name: "Composite",
                    className: "VerificationPolicyRevocationRequirement"
                }
            }
        }
    }
};
exports.CredentialDefinitionContract = {
    serializedName: "CredentialDefinitionContract",
    type: {
        name: "Composite",
        className: "CredentialDefinitionContract",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "version",
                type: {
                    name: "String"
                }
            },
            attributes: {
                serializedName: "attributes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            supportsRevocation: {
                serializedName: "supportsRevocation",
                type: {
                    name: "Boolean"
                }
            },
            schemaId: {
                serializedName: "schemaId",
                type: {
                    name: "String"
                }
            },
            definitionId: {
                serializedName: "definitionId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.CredentialDefinitionFromSchemaParameters = {
    serializedName: "CredentialDefinitionFromSchemaParameters",
    type: {
        name: "Composite",
        className: "CredentialDefinitionFromSchemaParameters",
        modelProperties: {
            supportRevocation: {
                serializedName: "supportRevocation",
                type: {
                    name: "Boolean"
                }
            },
            tag: {
                serializedName: "tag",
                type: {
                    name: "String"
                }
            },
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            version: {
                required: true,
                serializedName: "version",
                type: {
                    name: "String"
                }
            },
            attributes: {
                required: true,
                serializedName: "attributes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
exports.CredentialDefinitionParameters = {
    serializedName: "CredentialDefinitionParameters",
    type: {
        name: "Composite",
        className: "CredentialDefinitionParameters",
        modelProperties: {
            supportRevocation: {
                serializedName: "supportRevocation",
                type: {
                    name: "Boolean"
                }
            },
            tag: {
                serializedName: "tag",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.SchemaParameters = {
    serializedName: "SchemaParameters",
    type: {
        name: "Composite",
        className: "SchemaParameters",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            version: {
                required: true,
                serializedName: "version",
                type: {
                    name: "String"
                }
            },
            attributeNames: {
                required: true,
                serializedName: "attributeNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
exports.SchemaRecord = {
    serializedName: "SchemaRecord",
    type: {
        name: "Composite",
        className: "SchemaRecord",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            createdAtUtc: {
                serializedName: "createdAtUtc",
                type: {
                    name: "DateTime"
                }
            },
            updatedAtUtc: {
                serializedName: "updatedAtUtc",
                type: {
                    name: "DateTime"
                }
            },
            typeName: {
                readOnly: true,
                serializedName: "typeName",
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "version",
                type: {
                    name: "String"
                }
            },
            attributeNames: {
                serializedName: "attributeNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
exports.AttributeValue = {
    serializedName: "AttributeValue",
    type: {
        name: "Composite",
        className: "AttributeValue",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.AttributeFilter = {
    serializedName: "AttributeFilter",
    type: {
        name: "Composite",
        className: "AttributeFilter",
        modelProperties: {
            schemaId: {
                serializedName: "schema_id",
                type: {
                    name: "String"
                }
            },
            schemaIssuerDid: {
                serializedName: "schema_issuer_did",
                type: {
                    name: "String"
                }
            },
            schemaName: {
                serializedName: "schema_name",
                type: {
                    name: "String"
                }
            },
            schemaVersion: {
                serializedName: "schema_version",
                type: {
                    name: "String"
                }
            },
            issuerDid: {
                serializedName: "issuer_did",
                type: {
                    name: "String"
                }
            },
            credDefId: {
                serializedName: "cred_def_id",
                type: {
                    name: "String"
                }
            },
            attributeValue: {
                serializedName: "attributeValue",
                type: {
                    name: "Composite",
                    className: "AttributeValue"
                }
            }
        }
    }
};
exports.RevocationInterval = {
    serializedName: "RevocationInterval",
    type: {
        name: "Composite",
        className: "RevocationInterval",
        modelProperties: {
            from: {
                serializedName: "from",
                type: {
                    name: "Number"
                }
            },
            to: {
                serializedName: "to",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.ProofAttributeInfo = {
    serializedName: "ProofAttributeInfo",
    type: {
        name: "Composite",
        className: "ProofAttributeInfo",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            names: {
                serializedName: "names",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            restrictions: {
                serializedName: "restrictions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AttributeFilter"
                        }
                    }
                }
            },
            nonRevoked: {
                serializedName: "non_revoked",
                type: {
                    name: "Composite",
                    className: "RevocationInterval"
                }
            }
        }
    }
};
exports.ProofPredicateInfo = {
    serializedName: "ProofPredicateInfo",
    type: {
        name: "Composite",
        className: "ProofPredicateInfo",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            names: {
                serializedName: "names",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            restrictions: {
                serializedName: "restrictions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AttributeFilter"
                        }
                    }
                }
            },
            nonRevoked: {
                serializedName: "non_revoked",
                type: {
                    name: "Composite",
                    className: "RevocationInterval"
                }
            },
            pType: {
                serializedName: "p_type",
                type: {
                    name: "String"
                }
            },
            pValue: {
                serializedName: "p_value",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.ProofRequest = {
    serializedName: "ProofRequest",
    type: {
        name: "Composite",
        className: "ProofRequest",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "version",
                type: {
                    name: "String"
                }
            },
            nonce: {
                serializedName: "nonce",
                type: {
                    name: "String"
                }
            },
            requestedAttributes: {
                serializedName: "requested_attributes",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "ProofAttributeInfo"
                        }
                    }
                }
            },
            requestedPredicates: {
                serializedName: "requested_predicates",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "ProofPredicateInfo"
                        }
                    }
                }
            },
            nonRevoked: {
                serializedName: "non_revoked",
                type: {
                    name: "Composite",
                    className: "RevocationInterval"
                }
            }
        }
    }
};
exports.VerificationDefinitionContract = {
    serializedName: "VerificationDefinitionContract",
    type: {
        name: "Composite",
        className: "VerificationDefinitionContract",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            proofRequest: {
                serializedName: "proofRequest",
                type: {
                    name: "Composite",
                    className: "ProofRequest"
                }
            }
        }
    }
};
exports.BasicMessageParameters = {
    serializedName: "BasicMessageParameters",
    type: {
        name: "Composite",
        className: "BasicMessageParameters",
        modelProperties: {
            connectionId: {
                serializedName: "connectionId",
                type: {
                    name: "String"
                }
            },
            text: {
                serializedName: "text",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.BasicMessageRecord = {
    serializedName: "BasicMessageRecord",
    type: {
        name: "Composite",
        className: "BasicMessageRecord",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            createdAtUtc: {
                serializedName: "createdAtUtc",
                type: {
                    name: "DateTime"
                }
            },
            updatedAtUtc: {
                serializedName: "updatedAtUtc",
                type: {
                    name: "DateTime"
                }
            },
            typeName: {
                readOnly: true,
                serializedName: "typeName",
                type: {
                    name: "String"
                }
            },
            connectionId: {
                serializedName: "connectionId",
                type: {
                    name: "String"
                }
            },
            sentTime: {
                serializedName: "sentTime",
                type: {
                    name: "DateTime"
                }
            },
            direction: {
                serializedName: "direction",
                type: {
                    name: "String"
                }
            },
            text: {
                serializedName: "text",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.BasicMessageContract = {
    serializedName: "BasicMessageContract",
    type: {
        name: "Composite",
        className: "BasicMessageContract",
        modelProperties: {
            connectionId: {
                serializedName: "connectionId",
                type: {
                    name: "String"
                }
            },
            timestamp: {
                serializedName: "timestamp",
                type: {
                    name: "DateTime"
                }
            },
            text: {
                serializedName: "text",
                type: {
                    name: "String"
                }
            },
            direction: {
                serializedName: "direction",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.TenantExtendedInformationContract = {
    serializedName: "TenantExtendedInformationContract",
    type: {
        name: "Composite",
        className: "TenantExtendedInformationContract",
        modelProperties: {
            issuerDid: {
                serializedName: "issuerDid",
                type: {
                    name: "String"
                }
            },
            issuerKey: {
                serializedName: "issuerKey",
                type: {
                    name: "String"
                }
            },
            issuerKeyGenerationSeed: {
                serializedName: "issuerKeyGenerationSeed",
                type: {
                    name: "String"
                }
            },
            agentDid: {
                serializedName: "agentDid",
                type: {
                    name: "String"
                }
            },
            agentKey: {
                serializedName: "agentKey",
                type: {
                    name: "String"
                }
            },
            agentKeyGenerationSeed: {
                serializedName: "agentKeyGenerationSeed",
                type: {
                    name: "String"
                }
            },
            agentServiceEndpoint: {
                serializedName: "agentServiceEndpoint",
                type: {
                    name: "String"
                }
            },
            transactionEndorsement: {
                serializedName: "transactionEndorsement",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.TenantContract = {
    serializedName: "TenantContract",
    type: {
        name: "Composite",
        className: "TenantContract",
        modelProperties: {
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            imageUrl: {
                serializedName: "imageUrl",
                type: {
                    name: "String"
                }
            },
            network: {
                serializedName: "network",
                type: {
                    name: "Composite",
                    className: "NetworkContract"
                }
            },
            tenantId: {
                readOnly: true,
                serializedName: "tenantId",
                type: {
                    name: "String"
                }
            },
            extendedInformation: {
                serializedName: "extendedInformation",
                type: {
                    name: "Composite",
                    className: "TenantExtendedInformationContract"
                }
            }
        }
    }
};
exports.TenantParameters = {
    serializedName: "TenantParameters",
    type: {
        name: "Composite",
        className: "TenantParameters",
        modelProperties: {
            tenantId: {
                serializedName: "tenantId",
                type: {
                    name: "String"
                }
            },
            issuerSeed: {
                serializedName: "issuerSeed",
                type: {
                    name: "String"
                }
            },
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            imageUrl: {
                serializedName: "imageUrl",
                type: {
                    name: "String"
                }
            },
            networkId: {
                serializedName: "networkId",
                type: {
                    name: "String"
                }
            },
            endorserType: {
                serializedName: "endorserType",
                type: {
                    name: "String"
                }
            },
            region: {
                serializedName: "region",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.IssuerStatusContract = {
    serializedName: "IssuerStatusContract",
    type: {
        name: "Composite",
        className: "IssuerStatusContract",
        modelProperties: {
            acceptanceText: {
                serializedName: "acceptanceText",
                type: {
                    name: "String"
                }
            },
            acceptanceVersion: {
                serializedName: "acceptanceVersion",
                type: {
                    name: "String"
                }
            },
            acceptanceDigest: {
                serializedName: "acceptanceDigest",
                type: {
                    name: "String"
                }
            },
            acceptanceTime: {
                serializedName: "acceptanceTime",
                type: {
                    name: "Number"
                }
            },
            requireAcceptance: {
                serializedName: "requireAcceptance",
                type: {
                    name: "Boolean"
                }
            },
            transactionEndorsement: {
                serializedName: "transactionEndorsement",
                type: {
                    name: "String"
                }
            },
            issuerCanEndorse: {
                serializedName: "issuerCanEndorse",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.ProofAttributeContract = {
    serializedName: "ProofAttributeContract",
    type: {
        name: "Composite",
        className: "ProofAttributeContract",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            },
            attributes: {
                serializedName: "attributes",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            revealed: {
                readOnly: true,
                serializedName: "revealed",
                type: {
                    name: "Boolean"
                }
            },
            selfAttested: {
                serializedName: "selfAttested",
                type: {
                    name: "Boolean"
                }
            },
            conditional: {
                serializedName: "conditional",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.ProposedAttribute = {
    serializedName: "ProposedAttribute",
    type: {
        name: "Composite",
        className: "ProposedAttribute",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            credentialDefinitionId: {
                serializedName: "credentialDefinitionId",
                type: {
                    name: "String"
                }
            },
            schemaId: {
                serializedName: "schemaId",
                type: {
                    name: "String"
                }
            },
            issuerDid: {
                serializedName: "issuerDid",
                type: {
                    name: "String"
                }
            },
            mimeType: {
                serializedName: "mimeType",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            },
            referent: {
                serializedName: "referent",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ProposedPredicate = {
    serializedName: "ProposedPredicate",
    type: {
        name: "Composite",
        className: "ProposedPredicate",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            credentialDefinitionId: {
                serializedName: "credentialDefinitionId",
                type: {
                    name: "String"
                }
            },
            issuerDid: {
                serializedName: "issuerDid",
                type: {
                    name: "String"
                }
            },
            schemaId: {
                serializedName: "schemaId",
                type: {
                    name: "String"
                }
            },
            predicate: {
                serializedName: "predicate",
                type: {
                    name: "String"
                }
            },
            threshold: {
                serializedName: "threshold",
                type: {
                    name: "Number"
                }
            },
            referent: {
                serializedName: "referent",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ProofProposal = {
    serializedName: "ProofProposal",
    type: {
        name: "Composite",
        className: "ProofProposal",
        modelProperties: {
            comment: {
                serializedName: "comment",
                type: {
                    name: "String"
                }
            },
            proposedAttributes: {
                serializedName: "proposedAttributes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ProposedAttribute"
                        }
                    }
                }
            },
            proposedPredicates: {
                serializedName: "proposedPredicates",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ProposedPredicate"
                        }
                    }
                }
            }
        }
    }
};
exports.VerificationContract = {
    serializedName: "VerificationContract",
    type: {
        name: "Composite",
        className: "VerificationContract",
        modelProperties: {
            connectionId: {
                serializedName: "connectionId",
                type: {
                    name: "String"
                }
            },
            verificationId: {
                serializedName: "verificationId",
                type: {
                    name: "String"
                }
            },
            definitionId: {
                serializedName: "definitionId",
                type: {
                    name: "String"
                }
            },
            state: {
                serializedName: "state",
                type: {
                    name: "String"
                }
            },
            createdAtUtc: {
                serializedName: "createdAtUtc",
                type: {
                    name: "DateTime"
                }
            },
            updatedAtUtc: {
                serializedName: "updatedAtUtc",
                type: {
                    name: "DateTime"
                }
            },
            isValid: {
                serializedName: "isValid",
                type: {
                    name: "Boolean"
                }
            },
            verifiedAtUtc: {
                serializedName: "verifiedAtUtc",
                type: {
                    name: "DateTime"
                }
            },
            proof: {
                serializedName: "proof",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "ProofAttributeContract"
                        }
                    }
                }
            },
            policy: {
                serializedName: "policy",
                type: {
                    name: "Composite",
                    className: "VerificationPolicyParameters"
                }
            },
            proposal: {
                serializedName: "proposal",
                type: {
                    name: "Composite",
                    className: "ProofProposal"
                }
            },
            verificationRequestData: {
                serializedName: "verificationRequestData",
                type: {
                    name: "String"
                }
            },
            verificationRequestUrl: {
                serializedName: "verificationRequestUrl",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VerificationParameters = {
    serializedName: "VerificationParameters",
    type: {
        name: "Composite",
        className: "VerificationParameters",
        modelProperties: {
            verificationDefinitionId: {
                required: true,
                serializedName: "verificationDefinitionId",
                type: {
                    name: "String"
                }
            },
            connectionId: {
                serializedName: "connectionId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VerificationResult = {
    serializedName: "VerificationResult",
    type: {
        name: "Composite",
        className: "VerificationResult",
        modelProperties: {
            valid: {
                serializedName: "valid",
                type: {
                    name: "Boolean"
                }
            },
            proof: {
                serializedName: "proof",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "ProofAttributeContract"
                        }
                    }
                }
            }
        }
    }
};
exports.WebhookContract = {
    serializedName: "WebhookContract",
    type: {
        name: "Composite",
        className: "WebhookContract",
        modelProperties: {
            url: {
                serializedName: "url",
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            },
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.WebhookParameters = {
    serializedName: "WebhookParameters",
    type: {
        name: "Composite",
        className: "WebhookParameters",
        modelProperties: {
            url: {
                serializedName: "url",
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            parameters: {
                serializedName: "parameters",
                type: {
                    name: "String"
                }
            }
        }
    }
};
